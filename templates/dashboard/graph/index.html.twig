{% extends 'layouts/app.html.twig' %}
{% block breadcrumb %}
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="{{ url('dashboard_index') }}">Dashboard</a></li>
        <li class="breadcrumb-item active">Graph</li>
    </ol>
{% endblock %}

{% block content %}
    <div class=" container-fluid container-fixed-lg">
        <div class="card social-card share full-width m-b-10 no-border">
            <div class="card-header">
                <h5 class="text-success pull-left fs-12"><strong>Live stock market</strong></h5>
            </div>
            <div class="card-description">
                <div id="rickshaw-stacked-bars"></div>
            </div>
        </div>

    </div>
{% endblock %}

{% block customStyle %}
    <link rel="stylesheet" href="{{ asset('plugins/rickshaw/rickshaw.min.css') }}">
{% endblock %}

{% block customJS %}
    <script src="{{ asset('plugins/d3/d3.min.js') }}"></script>
    <script src="{{ asset('plugins/rickshaw/rickshaw.min.js') }}"></script>
    <script>
        $(function () {
            let container = '#rickshaw-stacked-bars';

            let seriesData = [
                [],
                []
            ];
            let random = new Rickshaw.Fixtures.RandomData(40);
            for (var i = 0; i < 40; i++) {
                random.addData(seriesData);
            }

            let graph = new Rickshaw.Graph({
                renderer: 'bar',
                element: document.querySelector(container),
                height: 300,
                padding: {
                    top: 0.5
                },
                series: [{
                    data: seriesData[0],
                    color: $.Pages.getColor('complete-light'), // Get Pages contextual color
                    name: "New users"
                }, {
                    data: seriesData[1],
                    color: $.Pages.getColor('master-light'), // Get Pages contextual color
                    name: "Returning users"

                }]

            });

            let hoverDetail = new Rickshaw.Graph.HoverDetail({
                graph: graph,
                formatter: function(series, x, y) {
                    var date = '<span class="date">' + new Date(x * 1000).toUTCString() + '</span>';
                    var swatch = '<span class="detail_swatch" style="background-color: ' + series.color + '"></span>';
                    var content = swatch + series.name + ": " + parseInt(y) + '<br>' + date;
                    return content;
                }
            });

            graph.render();


            jquery(window).resize(function() {
                graph.configure({
                    width: $(container).width(),
                    height: 500
                });
                graph.render()
            });

            $(container).data('chart', graph);
        })
    </script>
{% endblock %}